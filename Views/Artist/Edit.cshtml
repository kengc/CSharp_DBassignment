@model IEnumerable<WebApplication1.Models.ArtistModel>

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ArtistModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div><b>Artists Data</b><br /></div>
            <table class="table table-bordered table-responsive table-hover" id="artistTable">
                <tr>
                    <th>Artist Name </th>
                    <th>Label </th>
                    <th>Country </th>
                </tr>
                @foreach (var d in Model)
                {
                    <tr>
                        <td contenteditable="true">@d.ArtistName</td>
                        <td contenteditable="true">@d.Country</td>
                        <td contenteditable="true">@d.Label</td>
                    </tr>

                }
            </table>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            <button type="button" onclick="myFunction()" class="btn btn-primary">Add new row</button>
        </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}   

<script>
    function myFunction() {
      var table = document.getElementById("artistTable");
      var row = table.insertRow(-1);
      var cell1 = row.insertCell(0);
      var cell2 = row.insertCell(1);
      var cell3 = row.insertCell(2);
      cell1.innerHTML = "<div contenteditable>new1</div>";
      cell2.innerHTML = "<div contenteditable>new2</div>";
      cell3.innerHTML = "<div contenteditable>new3</div>";
    }
</script>
}
